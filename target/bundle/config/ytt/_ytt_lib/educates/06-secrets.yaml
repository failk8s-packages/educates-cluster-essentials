#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:library", "library")
#@ load("/00-package.star", "xgetattr")

#@ kyverno_policies = library.get("kyverno-policies").eval()

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-config".format(data.values.operator.namePrefix)
  namespace: #@ data.values.operator.namespace
  annotations:
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/num-versions: "5"
#@ if data.values.clusterIngress.domain == "educates-local-dev.test":
stringData:
  values.yaml: #@ yaml.encode(data.values)
  kyverno-policies.yaml: #@ yaml.encode(kyverno_policies)
#@ else:
data:
  values.yaml: #@ base64.encode(yaml.encode(data.values))
  kyverno-policies.yaml: #@ base64.encode(yaml.encode(kyverno_policies))
#@ end

#@ ingress_certificate = getattr(data.values.clusterIngress.tlsCertificate, "tls.crt")
#@ ingress_private_key = getattr(data.values.clusterIngress.tlsCertificate, "tls.key")
#@ ingress_secret_ref_name = data.values.clusterIngress.tlsCertificateRef.name

#@ if not ingress_secret_ref_name and ingress_certificate and ingress_private_key:
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-tls".format(data.values.clusterIngress.domain)
  namespace: #@ data.values.operator.namespace
type: kubernetes.io/tls
data:
  tls.crt: #@ base64.encode(ingress_certificate)
  tls.key: #@ base64.encode(ingress_private_key)
#@ end

#@ ingress_ca_certificate = getattr(data.values.clusterIngress.caCertificate, "ca.crt")
#@ ingress_ca_secret_ref_name = data.values.clusterIngress.caCertificateRef.name

#@ if not ingress_ca_secret_ref_name and ingress_ca_certificate:
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-ca".format(data.values.clusterIngress.domain)
  namespace: #@ data.values.operator.namespace
type: kubernetes.io/tls
data:
  ca.crt: #@ base64.encode(ingress_ca_certificate)
#@ end

#@ default_theme = data.values.websiteStyling

---
apiVersion: v1
kind: Secret
metadata:
  name: default-website-theme
  namespace: #@ data.values.operator.namespace
data:
  workshop-dashboard.html: #@ base64.encode(xgetattr(default_theme, "workshopDashboard.html", ""))
  workshop-dashboard.js: #@ base64.encode(xgetattr(default_theme, "workshopDashboard.script", ""))
  workshop-dashboard.css: #@ base64.encode(xgetattr(default_theme, "workshopDashboard.style", ""))
  workshop-instructions.html: #@ base64.encode(xgetattr(default_theme, "workshopInstructions.html", ""))
  workshop-instructions.js: #@ base64.encode(xgetattr(default_theme, "workshopInstructions.script", ""))
  workshop-instructions.css: #@ base64.encode(xgetattr(default_theme, "workshopInstructions.style", ""))
  workshop-started.html: #@ base64.encode(xgetattr(default_theme, "workshopStarted.html", ""))
  workshop-finished.html: #@ base64.encode(xgetattr(default_theme, "workshopFinished.html", ""))
  training-portal.html: #@ base64.encode(xgetattr(default_theme, "trainingPortal.html", ""))
  training-portal.js: #@ base64.encode(xgetattr(default_theme, "trainingPortal.script", ""))
  training-portal.css: #@ base64.encode(xgetattr(default_theme, "trainingPortal.style", ""))
