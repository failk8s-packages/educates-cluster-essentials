#@ def aws(originalValues):
clusterPackages:
  cert-manager:
    enabled: true
    settings:
#!      infraProvider: aws
      serviceaccount:
        annotations:
          eks.amazonaws.com/role-arn: #@ "arn:aws:iam::{}:role/svc.bot.route53.cert-manager-{}".format(originalValues.clusterInfrastructure.aws.awsId, originalValues.clusterInfrastructure.aws.clusterName)
      #! leaderElectionNamespace: cert-manager
  contour:
    enabled: true
    settings:
      infraProvider: aws
      service:
        type: LoadBalancer
  external-dns:
    enabled: true
    settings:
      infraProvider: aws
      serviceaccount:
        annotations:
          eks.amazonaws.com/role-arn: #@ "arn:aws:iam::{}:role/svc.bot.route53.external-dns-{}".format(originalValues.clusterInfrastructure.aws.awsId, originalValues.clusterInfrastructure.aws.clusterName)
#!      deployment:
#!        securityContext:
#!          runAsNonRoot: false
      aws:
        args:
          domain_filter: #@ originalValues.clusterIngress.domain
          txt_owner_id: "educates"
  certs:
    enabled: true
    settings:
      certProvider: acme-aws
      domains:
        - #@ originalValues.clusterIngress.domain
      aws:
        certs:
          region: #@ originalValues.clusterInfrastructure.aws.region
  kyverno:
    enabled: true
    settings: {}
  metacontroller:
    enabled: false
    settings: {}
#@ end

#@ def eks(originalValues):
clusterPackages:
  contour:
    enabled: true
#@ end